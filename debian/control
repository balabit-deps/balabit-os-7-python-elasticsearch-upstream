Source: python-elasticsearch-upstream
Section: python
Priority: optional
Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
Uploaders: Michael Fladischer <fladi@debian.org>
Build-Depends: debhelper (>= 9),
               dh-python,
               python-all,
               python-setuptools,
               python3-all,
               python3-setuptools
Build-Depends-Indep: libjs-jquery,
                     python-coverage,
                     python-mock,
                     python-nose,
                     python-pylibmc,
                     python-requests (>= 2.0.0),
                     python-thrift,
                     python-urllib3,
                     python-yaml,
                     python3-coverage,
                     python3-mock,
                     python3-nose,
                     python3-requests (>= 2.0.0),
                     python3-urllib3,
                     python3-sphinx (>= 1.0.7+dfsg-1~),
                     python3-sphinx-rtd-theme
Standards-Version: 4.1.0
Homepage: https://github.com/elasticsearch/elasticsearch-py
Vcs-Git: https://salsa.debian.org/python-team/modules/python-elasticsearch-upstream.git
Vcs-Browser: https://salsa.debian.org/python-team/modules/python-elasticsearch-upstream
Testsuite: autopkgtest-pkg-python

Package: python-elasticsearch-upstream
Architecture: all
Depends: ${misc:Depends}, ${python:Depends}
Conflicts: python-elasticsearch
Suggests: python-elasticsearch-upstream-doc
Description: Python client for Elasticsearch
 Official low-level client for Elasticsearch. Its goal is to provide common
 ground for all Elasticsearch-related code in Python; because of this it tries
 to be opinion-free and very extendable.
 .
 The client's features include:
  * translating basic Python data types to and from json (datetimes are not
    decoded for performance reasons)
  * configurable automatic discovery of cluster nodes
  * persistent connections
  * load balancing (with pluggable selection strategy) across all available
    nodes
  * failed connection penalization (time based - failed connections won't be
    retried until a timeout is reached)
  * thread safety
  * pluggable architecture

Package: python3-elasticsearch-upstream
Architecture: all
Depends: ${misc:Depends}, ${python3:Depends}
Conflicts: python3-elasticsearch
Suggests: python-elasticsearch-upstream-doc
Description: Python client for Elasticsearch (Python3 version)
 Official low-level client for Elasticsearch. Its goal is to provide common
 ground for all Elasticsearch-related code in Python; because of this it tries
 to be opinion-free and very extendable.
 .
 The client's features include:
  * translating basic Python data types to and from json (datetimes are not
    decoded for performance reasons)
  * configurable automatic discovery of cluster nodes
  * persistent connections
  * load balancing (with pluggable selection strategy) across all available
    nodes
  * failed connection penalization (time based - failed connections won't be
    retried until a timeout is reached)
  * thread safety
  * pluggable architecture
 .
 This package contains the Python 3 version of the library.

Package: python-elasticsearch-upstream-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, ${sphinxdoc:Depends}
Conflicts: python-elasticsearch-doc
Description: Python client for Elasticsearch (Documentation)
 Official low-level client for Elasticsearch. Its goal is to provide common
 ground for all Elasticsearch-related code in Python; because of this it tries
 to be opinion-free and very extendable.
 .
 The client's features include:
  * translating basic Python data types to and from json (datetimes are not
    decoded for performance reasons)
  * configurable automatic discovery of cluster nodes
  * persistent connections
  * load balancing (with pluggable selection strategy) across all available
    nodes
  * failed connection penalization (time based - failed connections won't be
    retried until a timeout is reached)
  * thread safety
  * pluggable architecture
 .
 This package contains the documentation.
